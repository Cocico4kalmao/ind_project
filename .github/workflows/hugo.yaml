name: Deploy Hugo site to Pages

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

defaults:
  run:
    shell: bash

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.148.2
      TAILWIND_VERSION: 4.1.12
    steps:
      - name: Install Hugo CLI
        run: |
          wget -O ${{ runner.temp }}/hugo.deb https://github.com/gohugoio/hugo/releases/download/v${HUGO_VERSION}/hugo_extended_${HUGO_VERSION}_linux-amd64.deb \
          && sudo dpkg -i ${{ runner.temp }}/hugo.deb
          hugo version
      
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      
      - name: Install Tailwind CSS v4
        run: |
          wget -O ${{ runner.temp }}/tailwindcss https://github.com/tailwindlabs/tailwindcss/releases/download/v${TAILWIND_VERSION}/tailwindcss-linux-x64
          chmod +x ${{ runner.temp }}/tailwindcss
          sudo mv ${{ runner.temp }}/tailwindcss /usr/local/bin/tailwindcss
          tailwindcss --version
      
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0
      
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
      
      - name: Debug - Check base URL
        run: |
          echo "Base URL: ${{ steps.pages.outputs.base_url }}"
      
      - name: Install Node.js dependencies
        run: |
          if [ -f "package-lock.json" ] || [ -f "npm-shrinkwrap.json" ]; then
            npm ci
          else
            echo "No package-lock.json or npm-shrinkwrap.json found, skipping npm install"
          fi
      
      - name: Build with Hugo
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
          HUGO_ENVIRONMENT: production
          TZ: America/Los_Angeles
        run: |
          echo "Hugo version: $(hugo version)"
          echo "TailwindCSS version: $(tailwindcss --version)"
          hugo --gc --minify --baseURL "${{ steps.pages.outputs.base_url }}/"
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./public

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
